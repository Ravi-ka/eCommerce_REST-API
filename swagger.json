{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "description": "API for E-Commerce application",
    "title": "E-commerce REST API"
  },
  "server": [
    {
      "url": "http://localhost:4000"
    }
  ],
  "components": {
    "securitySchemes": {
      "JWT": {
        "in": "header",
        "name": "Authorization",
        "type": "apiKey",
        "description": "Use the /signin API to generate the JWT Token"
      }
    }
  },
  "paths": {
    "/api/products/getAllProducts": {
      "get": {
        "tags": ["Products API"],
        "summary": "Get All Products",
        "description": "User will get all the product details. Need the JWT token to access this API. Please signIn to get the token.",
        "security": [{ "JWT": {} }],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/products/:id": {
      "get": {
        "tags": ["Products API"],
        "summary": "Get Products By ID",
        "description": "User will get all the product details by the productID. Need the JWT token to access this API. Please signIn to get the token.",
        "security": [{ "JWT": {} }],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/products/addProduct": {
      "post": {
        "tags": ["Products API"],
        "summary": "Add new Products",
        "description": "User will able to add new products. Need the JWT token to access this API. Please signIn to get the token.",
        "security": [{ "JWT": {} }],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "price": {
                    "type": "integer"
                  },
                  "category": {
                    "type": "string"
                  },
                  "size": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },

    "/api/user/signin": {
      "post": {
        "tags": ["Users API"],
        "summary": "Login",
        "description": "User should login first to get the token created",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Incorrect Credentials"
          }
        }
      }
    },
    "/api/user/signup": {
      "post": {
        "tags": ["Users API"],
        "summary": "SignUp",
        "description": "User should register",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  },
                  "userType": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Incorrect Credentials"
          }
        }
      }
    }
  }
}
